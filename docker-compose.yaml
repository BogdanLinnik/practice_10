version: '3.8'

services:
  postgres:
    image: postgres:12
    container_name: sonarqube-postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonarqube"]
      interval: 10s
      timeout: 5s
      retries: 5

  sonarqube:
    image: sonarqube:9.9-community
    container_name: sonarqube
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - ./healthcheck.sh:/opt/sonarqube/bin/healthcheck.sh
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    healthcheck:
      test: ["CMD-SHELL", "chmod +x /opt/sonarqube/bin/healthcheck.sh && /opt/sonarqube/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  sonar-scanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: sonar-scanner
    depends_on:
      sonarqube:
        condition: service_healthy
    environment:
      SONAR_HOST_URL: http://sonarqube:9000
      SONAR_TOKEN: sqp_441b5a978f58a8fa64ff60f806b259f2763a35e6
      SONAR_PROJECT_KEY: Practice-10
      SONAR_PROJECT_NAME: "Practice 10"
      SONAR_SOURCES: .
      SONAR_SOURCE_ENCODING: UTF-8
    networks:
      - sonarnet

networks:
  sonarnet:
    driver: bridge

volumes:
  postgresql:
  postgresql_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs: 